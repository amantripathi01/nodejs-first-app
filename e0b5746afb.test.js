// Test generated by RoostGPT for test ExpressJs using AI Type Open AI and AI Model gpt-4

import request from 'supertest';
import express from "express";
import path from "path";
import mongoose from "mongoose";
import cookieParser from "cookie-parser";
import jwt from "jsonwebtoken";
import bcrypt from "bcrypt"; 
import { app } from './index.js';

describe('Test the /register path', () => {
    beforeAll(() => {
        mongoose.connect('mongodb://localhost/testDB', { useNewUrlParser: true, useUnifiedTopology: true });
    });

    test('It should respond with a redirect on successful registration', async () => {
        const response = await request(app)
            .post('/register')
            .send({
                name: 'testUser',
                email: 'testUser@test.com',
                password: 'testPassword'
            });

        expect(response.statusCode).toBe(302);
        expect(response.headers.location).toBe('/');
    });

    test('It should respond with a redirect to /login when email already exists', async () => {
        const response = await request(app)
            .post('/register')
            .send({
                name: 'testUser',
                email: 'testUser@test.com',
                password: 'testPassword'
            });

        expect(response.statusCode).toBe(302);
        expect(response.headers.location).toBe('/login');
    });

    afterAll(async () => {
        await mongoose.connection.db.dropDatabase();
        await mongoose.connection.close();
    });
});
