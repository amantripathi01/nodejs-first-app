// ********RoostGPT********
// Test generated by RoostGPT for test aman12Feb using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
import express from "express";
import path from "path";
import mongoose from "mongoose";
import cookieParser from "cookie-parser";
import jwt from "jsonwebtoken";
import bcrypt from "bcrypt";
import request from 'supertest';
import app from './index';

jest.mock('jsonwebtoken');
jest.mock('bcrypt');

describe('GET /', () => {
  beforeEach(() => {
    jwt.verify.mockImplementation(() => ({
      id: 'testId',
      name: 'testName',
    }));
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  it('should return 200 and render logout page with user name if user is authenticated', async () => {
    const response = await request(app).get('/');

    expect(response.status).toBe(200);
    expect(response.text).toContain('testName');
  });

  it('should return 401 if user is not authenticated', async () => {
    jwt.verify.mockImplementationOnce(() => {
      throw new Error('User not authenticated');
    });

    const response = await request(app).get('/');

    expect(response.status).toBe(401);
    expect(response.text).toContain('User not authenticated');
  });
});
