// Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    fields:
      - "accountCode"
      - "profilePin"
    path: "path_to_your_csv_file.csv"
scenarios:
  - name: "Get Profile"
    flow:
      - get:
          url: "/Profile/{{ accountCode }}/{{ profilePin }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 200
            - hasProperty: "profileId"
            - hasProperty: "uuid"
            - hasProperty: "dateCreated"
            - hasProperty: "dateModified"
            - hasProperty: "externalKey"
            - hasProperty: "isActive"
            - hasProperty: "prefix"
            - hasProperty: "suffix"
            - hasProperty: "firstName"
            - hasProperty: "middleName"
            - hasProperty: "lastName"
            - hasProperty: "badgeName"
            - hasProperty: "dob"
            - hasProperty: "position"
            - hasProperty: "organization"
            - hasProperty: "phone"
            - hasProperty: "phone2"
            - hasProperty: "phoneMobile"
            - hasProperty: "fax"
            - hasProperty: "email"
            - hasProperty: "ccAssistantOnEmails"
            - hasProperty: "ccAssociateOnEmails"
            - hasProperty: "accountCode"
            - hasProperty: "profilePin"
            - hasProperty: "pkProfileId"
            - hasProperty: "showOnline"
            - hasProperty: "imported"
            - hasProperty: "source"
            - hasProperty: "media.url"
            - hasProperty: "media.photo"
            - hasProperty: "socialMedias.type"
            - hasProperty: "socialMedias.url"
            - hasProperty: "privatePersonal.dob"
            - hasProperty: "privatePersonal.gender"
            - hasProperty: "assistant.assistantName"
            - hasProperty: "assistant.assistantEmail"
            - hasProperty: "assistant.assistantPhone"
            - hasProperty: "travel.loginId"
            - hasProperty: "travel.freqFlyerProgram"
            - hasProperty: "travel.freqFlyerNumber"
            - hasProperty: "travel.seatPreference"
            - hasProperty: "travel.passportNumber"
            - hasProperty: "travel.passportFirstName"
            - hasProperty: "travel.passportLastName"
            - hasProperty: "travel.passportCountry"
            - hasProperty: "travel.passportExpirationDate"
            - hasProperty: "associate.associateName"
            - hasProperty: "associate.associateEmail"
            - hasProperty: "associate.associatePhone"
            - hasProperty: "notes"
            - hasProperty: "address.line1"
            - hasProperty: "address.line2"
            - hasProperty: "address.line3"
            - hasProperty: "address.line4"
            - hasProperty: "address.city"
            - hasProperty: "address.state"
            - hasProperty: "address.intlState"
            - hasProperty: "address.countryCode"
            - hasProperty: "address.country"
            - hasProperty: "address.postalCode"
            - hasProperty: "altAddress.line1"
            - hasProperty: "altAddress.line2"
            - hasProperty: "altAddress.line3"
            - hasProperty: "altAddress.line4"
            - hasProperty: "altAddress.city"
            - hasProperty: "altAddress.state"
            - hasProperty: "altAddress.intlState"
            - hasProperty: "altAddress.countryCode"
            - hasProperty: "altAddress.country"
            - hasProperty: "altAddress.postalCode"
            - hasProperty: "shipAddress.line1"
            - hasProperty: "shipAddress.line2"
            - hasProperty: "shipAddress.line3"
            - hasProperty: "shipAddress.line4"
            - hasProperty: "shipAddress.city"
            - hasProperty: "shipAddress.state"
            - hasProperty: "shipAddress.intlState"
            - hasProperty: "shipAddress.countryCode"
            - hasProperty: "shipAddress.country"
            - hasProperty: "shipAddress.postalCode"
            - hasProperty: "profileQuestions.questionField"
            - hasProperty: "profileQuestions.questionId"
            - hasProperty: "profileQuestions.questionCode"
            - hasProperty: "profileQuestions.questionName"
            - hasProperty: "profileQuestions.answers.answerId"
            - hasProperty: "profileQuestions.answers.answerCode"
            - hasProperty: "profileQuestions.answers.value"
            - hasProperty: "profileQuestions.answers.answerValue"
            - hasProperty: "password"
            - hasProperty: "events.event.registrationCode"
            - hasProperty: "events.event.eventCode"
            - hasProperty: "events.event.eventName"
            - hasProperty: "dataPrivacyPolicies.policy.policyType"
            - hasProperty: "dataPrivacyPolicies.policy.externalId"
            - hasProperty: "dataPrivacyPolicies.policy.privacyComplianceDate"
            - hasProperty: "dataPrivacyPolicies.policy.entryPoint"
            - hasProperty: "integrationExternalKeys.externalKey"
