# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "certainExternal_POST_1695028882.csv"
    fields:
      - "accountCode"
      - "eventCode"
      - "eventName"
      - "eventStatus"
      - "notes"
      - "startDate"
      - "endDate"
      - "timezone"
    skipHeader: true

scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/certainExternal/service/v1/Event/{{accountCode}}"
          json:
            eventCode: "{{ eventCode }}"
            accountCode: "{{ accountCode }}"
            eventName: "{{ eventName }}"
            eventStatus: "{{ eventStatus }}"
            notes: "{{ notes }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            timezone: "{{ timezone }}"
          headers:
            Authorization: "Basic {{ $processEnvironment.Username }}:{{ $processEnvironment.Password }}"
          expect:
            - statusCode: 200
            - hasProperty: "response"
            - hasProperty: "response.data"

  - name: "API request with validation failure"
    flow:
      - post:
          url: "/certainExternal/service/v1/Event/{{accountCode}}"
          json:
            eventCode: "{{ eventCode }}"
          headers:
            Authorization: "Basic {{ $processEnvironment.Username }}:{{ $processEnvironment.Password }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "error.message"

  - name: "API request with edge case"
    flow:
      - post:
          url: "/certainExternal/service/v1/Event/{{accountCode}}"
          json:
            eventCode: "{{ eventCode }}"
            accountCode: "{{ accountCode }}"
            eventName: "eventNameWithSpecialCharacters!@#$%^&*()_+"
            eventStatus: "{{ eventStatus }}"
            notes: "{{ notes }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            timezone: "{{ timezone }}"
          headers:
            Authorization: "Basic {{ $processEnvironment.Username }}:{{ $processEnvironment.Password }}"
          expect:
            - statusCode: 200
            - hasProperty: "response"
            - hasProperty: "response.data"
